/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pages.modal;

import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.PatientModel;

/**
 *
 * @author lugas
 */
public class PatientFilter extends javax.swing.JFrame {

    PatientModel patientModel = new PatientModel();
    private pages.transaction.Registrasi transactionRegistration;
    public String callbackTo = "";

    /**
     * Creates new form PatientFilter
     */
    public PatientFilter() {
        initComponents();
        initTable();
    }

    public PatientFilter(pages.transaction.Registrasi parent) {
        initComponents();
        initTable();

        this.transactionRegistration = parent;
        this.callbackTo = "transaction-registration";
    }

    private void initTable() {
        String filterKey = "name";
        String filterValue = inputFilterValue.getText();

        System.out.println(inputFilterKey.getSelectedIndex());

        switch (inputFilterKey.getSelectedIndex()) {
            case 1:
                filterKey = "identity_number";
                break;
            case 2:
                filterKey = "date_of_birth";
                break;
            case 3:
                filterKey = "address";
                break;
            case 4:
                filterKey = "phone";
                break;
            default:
                filterKey = "name";
        }

        table.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });

        DefaultTableModel RecordTable = (DefaultTableModel) table.getModel();
        RecordTable.setRowCount(0);

        String[] columns = {"id", "No. Identitas", "Nama", "Jenis Kelamin", "Tanggal Lahir", "Alamat", "No. Telp"};
        RecordTable.setColumnIdentifiers(columns);

        try {
            ResultSet patients;
            if (filterValue.equals("")) {
                patients = patientModel.get();
            } else {
                patients = patientModel.get(filterKey, filterValue);
            }

            while (patients.next()) {
                String identityNumber = patients.getString("identity_number");
                String name = patients.getString("name");
                int genderId = patients.getInt("gender");
                String dob = patients.getString("date_of_birth");
                String address = patients.getString("address");
                String phone = patients.getString("phone");
                String id = patients.getString("id");

                String gender = "Laki-laki";
                if (genderId == 2) {
                    gender = "Perempuan";
                }

                String[] row = {id, identityNumber, name, gender, dob, address, phone};
                RecordTable.addRow(row);
            }
            table.getColumnModel().getColumn(0).setMinWidth(0);
            table.getColumnModel().getColumn(0).setMaxWidth(0);
            table.getColumnModel().getColumn(0).setWidth(0);
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        inputFilterValue = new javax.swing.JTextField();
        inputFilterKey = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "dsad"},
                { new Integer(2), null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Filter");

        inputFilterValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputFilterValueKeyReleased(evt);
            }
        });

        inputFilterKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nama", "Identitas", "Tanggal Lahir", "Alamat", "Telepon" }));
        inputFilterKey.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inputFilterKeyItemStateChanged(evt);
            }
        });
        inputFilterKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputFilterKeyMouseClicked(evt);
            }
        });
        inputFilterKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFilterKeyActionPerformed(evt);
            }
        });
        inputFilterKey.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                inputFilterKeyPropertyChange(evt);
            }
        });
        inputFilterKey.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                inputFilterKeyVetoableChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(inputFilterValue, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputFilterKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputFilterValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFilterKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFilterValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFilterValueKeyReleased
        initTable();
    }//GEN-LAST:event_inputFilterValueKeyReleased

    private void inputFilterKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFilterKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFilterKeyActionPerformed

    private void inputFilterKeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFilterKeyMouseClicked
        initTable();
    }//GEN-LAST:event_inputFilterKeyMouseClicked

    private void inputFilterKeyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_inputFilterKeyPropertyChange
        initTable();
    }//GEN-LAST:event_inputFilterKeyPropertyChange

    private void inputFilterKeyVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_inputFilterKeyVetoableChange
        initTable();
    }//GEN-LAST:event_inputFilterKeyVetoableChange

    private void inputFilterKeyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inputFilterKeyItemStateChanged
        initTable();
    }//GEN-LAST:event_inputFilterKeyItemStateChanged

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            int row = table.rowAtPoint(evt.getPoint());
//            int col = patientTable.columnAtPoint(evt.getPoint());
            String id = table.getValueAt(row, 0).toString();
            System.out.println(id);

            switch (callbackTo) {
                case "transaction-registration":
                    this.transactionRegistration.selectedPatientId(Integer.parseInt(id));
                    break;
                default:
                    System.out.println("callback to empty");
            }
        }

    }//GEN-LAST:event_tableMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientFilter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> inputFilterKey;
    private javax.swing.JTextField inputFilterValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
